<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="12" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="LoginLogoutRegistration Suite" duration-ms="330717" started-at="2020-05-12T14:42:01 WIB" finished-at="2020-05-12T14:47:32 WIB">
    <groups>
    </groups>
    <test name="PositiveLogin" duration-ms="96707" started-at="2020-05-12T14:42:01 WIB" finished-at="2020-05-12T14:43:38 WIB">
      <class name="tests.PositiveLogin">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.PositiveLogin@1f57539]" name="setup" is-config="true" duration-ms="76736" started-at="2020-05-12T14:42:01 WIB" finished-at="2020-05-12T14:43:18 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.PositiveLogin@1f57539]" name="beforeMethod" is-config="true" duration-ms="10" started-at="2020-05-12T14:43:18 WIB" finished-at="2020-05-12T14:43:18 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.PositiveLogin.testLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLogin()[pri:1, instance:tests.PositiveLogin@1f57539]" name="testLogin" duration-ms="19832" started-at="2020-05-12T14:43:18 WIB" finished-at="2020-05-12T14:43:38 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.PositiveLogin@1f57539]" name="getResult" is-config="true" duration-ms="20" started-at="2020-05-12T14:43:38 WIB" finished-at="2020-05-12T14:43:38 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=PositiveLogin.testLogin()[pri:1, instance:tests.PositiveLogin@1f57539] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.PositiveLogin.testLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.PositiveLogin -->
    </test> <!-- PositiveLogin -->
    <test name="LogOut" duration-ms="41470" started-at="2020-05-12T14:43:38 WIB" finished-at="2020-05-12T14:44:19 WIB">
      <class name="tests.Logout">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.Logout@7a187f14]" name="setup" is-config="true" duration-ms="15160" started-at="2020-05-12T14:43:38 WIB" finished-at="2020-05-12T14:43:53 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Logout@7a187f14]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-12T14:43:53 WIB" finished-at="2020-05-12T14:43:53 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Logout.testLogout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLogout()[pri:1, instance:tests.Logout@7a187f14]" name="testLogout" duration-ms="26249" started-at="2020-05-12T14:43:53 WIB" finished-at="2020-05-12T14:44:19 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogout -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.Logout@7a187f14]" name="getResult" is-config="true" duration-ms="3" started-at="2020-05-12T14:44:19 WIB" finished-at="2020-05-12T14:44:19 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogout status=SUCCESS method=Logout.testLogout()[pri:1, instance:tests.Logout@7a187f14] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.Logout.testLogout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.Logout -->
    </test> <!-- LogOut -->
    <test name="NegativeLogin" duration-ms="100372" started-at="2020-05-12T14:44:19 WIB" finished-at="2020-05-12T14:46:00 WIB">
      <class name="tests.NegativeLogin">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="setup" is-config="true" duration-ms="10199" started-at="2020-05-12T14:44:19 WIB" finished-at="2020-05-12T14:44:29 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-12T14:44:29 WIB" finished-at="2020-05-12T14:44:29 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeLogin.invalidUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidUsername()[pri:1, instance:tests.NegativeLogin@36b4cef0]" name="invalidUsername" duration-ms="17825" started-at="2020-05-12T14:44:29 WIB" finished-at="2020-05-12T14:44:47 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUsername -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="getResult" is-config="true" duration-ms="1" started-at="2020-05-12T14:44:47 WIB" finished-at="2020-05-12T14:44:47 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUsername status=SUCCESS method=NegativeLogin.invalidUsername()[pri:1, instance:tests.NegativeLogin@36b4cef0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeLogin.invalidUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-12T14:44:47 WIB" finished-at="2020-05-12T14:44:47 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeLogin.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidPassword()[pri:2, instance:tests.NegativeLogin@36b4cef0]" name="invalidPassword" duration-ms="19944" started-at="2020-05-12T14:44:47 WIB" finished-at="2020-05-12T14:45:07 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="getResult" is-config="true" duration-ms="2" started-at="2020-05-12T14:45:07 WIB" finished-at="2020-05-12T14:45:07 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=NegativeLogin.invalidPassword()[pri:2, instance:tests.NegativeLogin@36b4cef0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeLogin.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-12T14:45:07 WIB" finished-at="2020-05-12T14:45:07 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeLogin.blankUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="blankUsername()[pri:3, instance:tests.NegativeLogin@36b4cef0]" name="blankUsername" duration-ms="20657" started-at="2020-05-12T14:45:07 WIB" finished-at="2020-05-12T14:45:28 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankUsername -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="getResult" is-config="true" duration-ms="1" started-at="2020-05-12T14:45:28 WIB" finished-at="2020-05-12T14:45:28 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=blankUsername status=SUCCESS method=NegativeLogin.blankUsername()[pri:3, instance:tests.NegativeLogin@36b4cef0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeLogin.blankUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-12T14:45:28 WIB" finished-at="2020-05-12T14:45:28 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeLogin.blankPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="blankPassword()[pri:4, instance:tests.NegativeLogin@36b4cef0]" name="blankPassword" duration-ms="18746" started-at="2020-05-12T14:45:28 WIB" finished-at="2020-05-12T14:45:47 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="getResult" is-config="true" duration-ms="0" started-at="2020-05-12T14:45:47 WIB" finished-at="2020-05-12T14:45:47 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=blankPassword status=SUCCESS method=NegativeLogin.blankPassword()[pri:4, instance:tests.NegativeLogin@36b4cef0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeLogin.blankPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-12T14:45:47 WIB" finished-at="2020-05-12T14:45:47 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeLogin.blankUsernameAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="blankUsernameAndPassword()[pri:5, instance:tests.NegativeLogin@36b4cef0]" name="blankUsernameAndPassword" duration-ms="12956" started-at="2020-05-12T14:45:47 WIB" finished-at="2020-05-12T14:46:00 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankUsernameAndPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeLogin@36b4cef0]" name="getResult" is-config="true" duration-ms="2" started-at="2020-05-12T14:46:00 WIB" finished-at="2020-05-12T14:46:00 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=blankUsernameAndPassword status=SUCCESS method=NegativeLogin.blankUsernameAndPassword()[pri:5, instance:tests.NegativeLogin@36b4cef0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeLogin.blankUsernameAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.NegativeLogin -->
    </test> <!-- NegativeLogin -->
    <test name="NegativeRegistration" duration-ms="91829" started-at="2020-05-12T14:46:00 WIB" finished-at="2020-05-12T14:47:32 WIB">
      <class name="tests.NegativeRegistration">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="beforeSuite" is-config="true" duration-ms="377" started-at="2020-05-12T14:42:01 WIB" finished-at="2020-05-12T14:42:01 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="setup" is-config="true" duration-ms="11695" started-at="2020-05-12T14:46:00 WIB" finished-at="2020-05-12T14:46:12 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-12T14:46:12 WIB" finished-at="2020-05-12T14:46:12 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeRegistration.firstNameMaxLengthChar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="firstNameMaxLengthChar()[pri:1, instance:tests.NegativeRegistration@58c1670b]" name="firstNameMaxLengthChar" duration-ms="18114" started-at="2020-05-12T14:46:12 WIB" finished-at="2020-05-12T14:46:30 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstNameMaxLengthChar -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="getResult" is-config="true" duration-ms="0" started-at="2020-05-12T14:46:30 WIB" finished-at="2020-05-12T14:46:30 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=firstNameMaxLengthChar status=SUCCESS method=NegativeRegistration.firstNameMaxLengthChar()[pri:1, instance:tests.NegativeRegistration@58c1670b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeRegistration.firstNameMaxLengthChar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="lastNameMaxLengthChar()[pri:2, instance:tests.NegativeRegistration@58c1670b]" name="lastNameMaxLengthChar" duration-ms="19579" started-at="2020-05-12T14:46:30 WIB" finished-at="2020-05-12T14:46:49 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastNameMaxLengthChar -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-12T14:46:30 WIB" finished-at="2020-05-12T14:46:30 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeRegistration.lastNameMaxLengthChar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="getResult" is-config="true" duration-ms="2" started-at="2020-05-12T14:46:49 WIB" finished-at="2020-05-12T14:46:49 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lastNameMaxLengthChar status=SUCCESS method=NegativeRegistration.lastNameMaxLengthChar()[pri:2, instance:tests.NegativeRegistration@58c1670b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeRegistration.lastNameMaxLengthChar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-12T14:46:49 WIB" finished-at="2020-05-12T14:46:49 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeRegistration.invalidEmailFormat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidEmailFormat()[pri:3, instance:tests.NegativeRegistration@58c1670b]" name="invalidEmailFormat" duration-ms="18753" started-at="2020-05-12T14:46:49 WIB" finished-at="2020-05-12T14:47:08 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmailFormat -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="getResult" is-config="true" duration-ms="2" started-at="2020-05-12T14:47:08 WIB" finished-at="2020-05-12T14:47:08 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidEmailFormat status=SUCCESS method=NegativeRegistration.invalidEmailFormat()[pri:3, instance:tests.NegativeRegistration@58c1670b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeRegistration.invalidEmailFormat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-12T14:47:08 WIB" finished-at="2020-05-12T14:47:08 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeRegistration.passwordLess6Characters()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="passwordLess6Characters()[pri:4, instance:tests.NegativeRegistration@58c1670b]" name="passwordLess6Characters" duration-ms="12309" started-at="2020-05-12T14:47:08 WIB" finished-at="2020-05-12T14:47:20 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordLess6Characters -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="getResult" is-config="true" duration-ms="1" started-at="2020-05-12T14:47:20 WIB" finished-at="2020-05-12T14:47:20 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passwordLess6Characters status=SUCCESS method=NegativeRegistration.passwordLess6Characters()[pri:4, instance:tests.NegativeRegistration@58c1670b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeRegistration.passwordLess6Characters()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="passwordMore20Characters()[pri:5, instance:tests.NegativeRegistration@58c1670b]" name="passwordMore20Characters" duration-ms="11347" started-at="2020-05-12T14:47:20 WIB" finished-at="2020-05-12T14:47:32 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordMore20Characters -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-12T14:47:20 WIB" finished-at="2020-05-12T14:47:20 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.NegativeRegistration.passwordMore20Characters()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="getResult" is-config="true" duration-ms="0" started-at="2020-05-12T14:47:32 WIB" finished-at="2020-05-12T14:47:32 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passwordMore20Characters status=SUCCESS method=NegativeRegistration.passwordMore20Characters()[pri:5, instance:tests.NegativeRegistration@58c1670b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void tests.NegativeRegistration.passwordMore20Characters()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="teardown" is-config="true" duration-ms="1102" started-at="2020-05-12T14:47:32 WIB" finished-at="2020-05-12T14:47:33 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.NegativeRegistration@58c1670b]" name="endReport" is-config="true" duration-ms="722" started-at="2020-05-12T14:47:33 WIB" depends-on-methods="pages.BaseClass.teardown" finished-at="2020-05-12T14:47:34 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- tests.NegativeRegistration -->
    </test> <!-- NegativeRegistration -->
  </suite> <!-- LoginLogoutRegistration Suite -->
</testng-results>
